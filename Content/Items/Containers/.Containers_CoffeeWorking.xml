<?xml version="1.0" encoding="utf-8"?>
<Override>
  <Items>
    <Item name="Coffee Machine" identifier="coffeemachine" tags="container,coffeemachine" category="Machines" description="Brews a nice cup of coffee." scale="0.5" isshootable="true" requireaimtouse="true" impactsoundtag="impact_metal_heavy">
      <Sprite texture="%ModDir:2954998725%/Content/Items/Containers/Containers.png" depth="0.786" sourcerect="406,301,85,168" origin="0.5,0.5" />
      <!-- DecorativeSprite to display the empty cup when it is contained -->
      <DecorativeSprite texture="%ModDir:2954998725%/Content/Items/Food/DrinksAndIngredients.png" sourcerect="83,490,31,21" depth="0.785" origin="0.6,-1.1">
        <IsActiveConditional HasTag="emptycup" targetcontaineditem="true" />
      </DecorativeSprite>
      <!-- DecorativeSprite to display the coffee cup when it is contained -->
      <DecorativeSprite texture="%ModDir:2954998725%/Content/Items/Food/DrinksAndIngredients.png" sourcerect="83,425,31,21" depth="0.785" origin="0.6,-1.1">
        <IsActiveConditional HasTag="cupofcoffee" targetcontaineditem="true" />
      </DecorativeSprite>
      <!-- DecorativeSprite to display a mug when it is contained -->
      <DecorativeSprite texture="%ModDir:2954998725%/Content/Items/Food/DrinksAndIngredients.png" sourcerect="115,474,36,37" depth="0.785" origin="0.6,-0.4" scale="0.8">
        <IsActiveConditional HasTag="mug" targetcontaineditem="true" />
      </DecorativeSprite>
      <GreaterComponent canbeselected="false" selectkey="Select" canbepicked="false" allowingameediting="false" timeframe="0" />
      <Body width="80" height="164" density="15" />
      <CustomInterface drawhudwhenequipped="false" canbeselected="true" selectkey="Select">
        <GuiFrame relativesize="0.1,0.1" anchor="Center" relativeoffset="0.0,0.27" style="ItemUI" />
        <Button text="interaction.brew">
          <StatusEffect type="OnUse" target="This" timeframe="1" setvalue="true">
            <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Containers/coffee_start.ogg" loop="false" range="500" volume="2" />
          </StatusEffect>
          <StatusEffect type="OnUse" target="This" IsOn="false" timeframe="0" setvalue="true">
            <Conditional timeframe="gt 1" />
          </StatusEffect>
          <StatusEffect type="OnUse" target="This" IsOn="true" setvalue="true">
            <Conditional timeframe="eq 1" />
          </StatusEffect>
          <StatusEffect type="OnUse" target="Contained" noninteractable="true" setvalue="true">
            <Conditional HasStatusTag="eq canrefill" targetcontainer="true" />
          </StatusEffect>
          <StatusEffect type="OnUse" target="Contained" noninteractable="false" setvalue="true" delay="15" stackable="false">
            <Conditional HasStatusTag="eq canrefill" targetcontainer="true" />
          </StatusEffect>
        </Button>
      </CustomInterface>
      <Deconstruct time="10">
        <Item identifier="steel" amount="2" />
      </Deconstruct>
      <Fabricate suitablefabricators="fabricator" requiredtime="20" requiresrecipe="false">
        <RequiredSkill identifier="mechanical" level="30" />
        <RequiredItem identifier="steel" amount="3" />
        <RequiredItem identifier="fpgacircuit" amount="1" />
      </Fabricate>
      <!-- FIRE EXTINGUISHER REFILL -->
      <LightComponent LightColor="0,0,0,0" IsOn="false" powerconsumption="400" range="0" castshadows="false" allowingameediting="false" canbeselected="false" comparison="And">
        <IsActiveConditional timeframe="1" targetitemcomponent="GreaterComponent" />
        <IsActiveConditional hastag="coffeemix" targetcontaineditem="true" />
        <IsActiveConditional hastag="tableware" targetcontaineditem="true" />
        <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Containers/coffee_brew.ogg" type="OnActive" loop="true" range="500" volume="4" />
        <StatusEffect type="OnActive" target="Contained" noninteractable="false" setvalue="true">
          <Conditional HasStatusTag="neq canrefill" targetcontainer="true" />
        </StatusEffect>
        <StatusEffect type="OnActive" target="Contained" targetslot="0" condition="-10" disabledeltatime="true" delay="15" stackable="false" checkconditionalalways="true">
          <Conditional voltage="gte 0.5" targetcontainer="true" />
        </StatusEffect>
        <StatusEffect type="OnActive" target="Contained" targetslot="1" delay="15" stackable="false" checkconditionalalways="true">
          <Conditional voltage="gte 0.5" targetcontainer="true" />
          <Remove />
        </StatusEffect>
        <StatusEffect type="OnActive" target="This" delay="15.1" stackable="false" checkconditionalalways="true">
          <Conditional voltage="gte 0.5" />
          <SpawnItem identifier="he-mugcoffee" spawnposition="ThisInventory" spawnifcantbecontained="true" spawnifinventoryfull="true" />
        </StatusEffect>
        <!-- turn the device off by setting the timeframe to "0" and turning the LightComponent off, if the contained tank is full -->
        <StatusEffect type="OnActive" target="This" targetslot="0" IsOn="false" timeframe="0" setvalue="true" delay="15" stackable="false" checkconditionalalways="true">
          <Conditional voltage="gte 0.5" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Containers/coffee_end.ogg" loop="false" range="500" volume="2" />
        </StatusEffect>
      </LightComponent>
      <!-- ItemComponent is used to turn the LightComponent off and reset the timeframe, if one of the contained items was removed during refilling -->
      <ItemComponent canbepicked="false" canbeselected="false" allowingameediting="false" comparison="And">
        <IsActiveConditional timeframe="1" targetitemcomponent="GreaterComponent" />
        <!-- turn the device off by setting the timeframe to "0" and turning the LightComponent off, if it was still active when it wasn't supposed to be -->
        <StatusEffect type="OnActive" target="This" IsOn="false" timeframe="0" setvalue="true" comparison="And" stackable="false" checkconditionalalways="true">
          <Conditional HasStatusTag="neq canrefill" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Containers/coffee_end.ogg" loop="false" range="500" volume="2" />
        </StatusEffect>
        <!-- turn the device off by setting the timeframe to "0" and turning the LightComponent off, if no power is supplied -->
        <StatusEffect type="OnActive" target="This" IsOn="false" timeframe="0" setvalue="true" comparison="And" delay="0.5" CheckConditionalAlways="true" stackable="false">
          <Conditional voltage="lt 0.5" targetitemcomponent="LightComponent" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Containers/coffee_end.ogg" loop="false" range="500" volume="2" />
        </StatusEffect>
      </ItemComponent>
      <Holdable slots="RightHand+LeftHand" canbeselected="true" selectkey="Select" canbepicked="true" pickkey="Action" PickingTime="5" attachable="true" holdpos="70,-40" handle1="-60,30" handle2="-20,50">
        <RequiredItem items="wrench" type="Equipped" />
        <!-- slow down the character carrying the device -->
        <StatusEffect type="OnActive" target="Character" SpeedMultiplier="0.3" PropulsionSpeedMultiplier="0.3" setvalue="true" duration="0.1" />
        <!-- drop contained items if the device is detached -->
        <StatusEffect type="OnContained" target="This">
          <DropContainedItems />
        </StatusEffect>
        <!-- tag the device with "canrefill" if both required items for a refill are contained -->
        <StatusEffect type="Always" target="This" tags="canrefill" interval="0.1" duration="0.2" setvalue="true" comparison="And">
          <Conditional HasTag="tableware" targetcontaineditem="true" />
          <Conditional HasTag="coffeemix" targetcontaineditem="true" />
          <Conditional voltage="gte 0.5" />
        </StatusEffect>
      </Holdable>
      <ConnectionPanel selectkey="Action" canbeselected="true" msg="ItemMsgRewireScrewdriver" hudpriority="10">
        <GuiFrame relativesize="0.2,0.32" minsize="400,350" maxsize="480,420" anchor="Center" style="ConnectionPanel" />
        <RequiredSkill identifier="electrical" level="55" />
        <StatusEffect type="OnFailure" target="Character" targetlimbs="LeftHand,RightHand" AllowWhenBroken="true">
          <Sound file="Content/Sounds/Damage/Electrocution1.ogg" range="1000" />
          <Explosion range="100.0" force="1.0" flames="false" shockwave="false" sparks="true" underwaterbubble="false" />
          <Affliction identifier="stun" strength="4" />
          <Affliction identifier="burn" strength="5" />
        </StatusEffect>
        <RequiredItem items="screwdriver" type="Equipped" />
        <ParticleEmitter particle="damagebubbles" particlespersecond="2" scalemin="0.5" scalemax="1.5" anglemax="360" velocitymin="-10" velocitymax="10" mincondition="0.0" maxcondition="50.0" />
        <ParticleEmitter particle="MistSmoke" particlespersecond="60" anglemin="0" anglemax="360" distancemin="0" distancemax="10" velocitymin="0" velocitymax="20" mincondition="0.0" maxcondition="50.0" />
        <ParticleEmitter particle="spark" particleamount="5" emitinterval="2" particlespersecond="5" anglemax="360" distancemax="30" velocitymin="100" velocitymax="500" scalemin="0.5" scalemax="1" mincondition="0.0" maxcondition="15.0" />
        <ParticleEmitter particle="fleshsmoke" particlespersecond="2" scalemin="1" scalemax="2" mincondition="0.0" maxcondition="50.0" />
        <input name="power_in" displayname="connection.powerin" />
      </ConnectionPanel>
      <ItemContainer canbeselected="true" selectkey="Select" capacity="1" maxstacksize="1" hideitems="true">
        <GuiFrame relativesize="0.11,0.17" anchor="Center" minsize="140,170" maxsize="280,280" style="ItemUI" />
        <SlotIcon slotindex="0" texture="%ModDir:3114087512%/Content/UI/IR-IconsAtlas.png" sourcerect="510,0,85,85" origin="0.5,0.5" />
        <SlotIcon slotindex="1" texture="Content/UI/StatusMonitorUI.png" sourcerect="64,448,64,64" origin="0.5,0.5" />
        <Containable items="coffeemix" />
        <SubContainer capacity="1">
          <Containable items="emptymug,coffeemug,emptycup,cupofcoffee"/>
        </SubContainer>
      </ItemContainer>
    </Item>
  </Items>
</Override>