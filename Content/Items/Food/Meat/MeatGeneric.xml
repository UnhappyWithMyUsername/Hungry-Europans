<?xml version="1.0" encoding="utf-8"?>
<Override>
  <Items>
    <!-- Patty -->
    <Item name="Raw Meat Patty" identifier="he-rawmeatpatty" category="Misc" subcategory="Ingredients" maxstacksize="8" cargocontaineridentifier="he-coolercrate" description="" Tags="smallitem,meat,ingredient,allowongrill,canspoil,petfood1,petfood2,petfood3" useinhealthinterface="false" scale="0.5" impactsoundtag="impact_soft" isshootable="true" requireaimtouse="true">
      <PreferredContainer secondary="wreckmedcab,abandonedmedcab" spawnprobability="0.02" />
      <PreferredContainer secondary="abandonedcrewcab" minamount="0" maxamount="1" spawnprobability="0.02" />
      <PreferredContainer primary="refrigerator" secondary="refrigeratedcontainer"/>
      <Sprite texture="%ModDir:2954998725%/Content/Items/Food/FoodAndMeat.png" sourcerect="243,458,35,8" depth="0.6" origin="0.5,0.5" />
      <InventoryIcon texture="%ModDir:2954998725%/Content/Items/Food/FoodAndMeat.png" sourcerect="279,459,31,17" origin="0.5,0.5" />
      <Fabricate suitablefabricators="cuttingboard" requiredtime="18" requiresrecipe="false" amount="2">
        <RequiredSkill identifier="butchery" level="20" />
        <RequiredItem tag="rawmeatpiece" amount="1" MinCondition="0.5" MaxCondition="1.0" UseCondition="False" />
        <RequiredItem identifier="he-salt" UseCondition="True" MinCondition="0.025"/>
      </Fabricate>
      <Deconstruct time="1" requireddeconstructor="deconstructor" />
      <Body width="31" height="5" density="9" />
      <Price baseprice="29" minavailable="4" maxavailable="16" mincondition="0.9" maxcondition="1.0" usecondition="false" sold="false">
        <Price storeidentifier="merchantoutpost"/>
        <Price storeidentifier="merchantcity"/>
        <Price storeidentifier="merchantresearch"/>
        <Price storeidentifier="merchantmilitary"/>
        <Price storeidentifier="merchantmine"/>
        <Price storeidentifier="merchantmedical"/>
        <Price storeidentifier="merchantbutcher" multiplier="2.0" minavailable="0" maxavailable="32" sold="true" />
      </Price>
      <!-- ItemComponent hosts the effects for grilling the item -->
      <ItemComponent canbeselected="false" canbepicked="false" allowingameediting="false">
        <ActiveConditional HasStatusTag="eq activegrill" targetcontainer="true" />
        <!-- MaxValueLength is used to track the time spent on the grill. It is increased by 1 every second the item is in a container with the "activegrill" status tag -->
        <StatusEffect type="OnActive" target="This" MaxValueLength="1" interval="1" disabledeltatime="true" />
        <!-- Reset the MaxValueLength when the item is no longer contained in a container with the "activegrill" status tag -->
        <StatusEffect type="OnActive" target="This" MaxValueLength="0" setvalue="true" disabledeltatime="true">
          <Conditional HasStatusTag="neq activegrill" targetcontainer="true" />
        </StatusEffect>
        <!-- Check every second if the MaxValueLength reached or exceeded a value of 45, then remove the item and spawn the cooked version in its place -->
        <StatusEffect type="OnActive" target="This" interval="1" disabledeltatime="true">
          <Conditional MaxValueLength="gte 45" />
          <Remove />
          <SpawnItem identifier="he-meatpatty" spawnposition="SameInventory" spawnifcantbecontained="true" SpawnIfInventoryFull="true" />
        </StatusEffect>
      </ItemComponent>
      <!-- MemoryComponent hosts the MaxValueLength attribute which we use to track the time by adjusting its value via StatusEffects each second -->
      <MemoryComponent canbepicked="false" canbeselected="false" allowingameediting="false" drawhudwhenequipped="false" string="" MaxValueLength="0" />
      <!-- GreaterComponent hosts the timeframe attribute which we use for a secondary timer to count the time the item spent outside a refrigerated container -->
      <GreaterComponent canbepicked="false" canbeselected="false" allowingameediting="false" drawhudwhenequipped="false" timeframe="0">
        <!-- Always increase the timeframe value by 2 every 2 seconds -->
        <StatusEffect type="Always" target="This" timeframe="2" interval="2" disabledeltatime="true" />
        <!-- If the item is inside a container that has either the "activecooling" status tag or the "kitchenfabricator" tag, reset the timeframe back to 0 since the item is actively cooled -->
        <StatusEffect type="Always" target="This" timeframe="0" interval="2" disabledeltatime="true" setvalue="true">
          <Conditional HasStatusTag="eq activecooling" targetcontainer="true" />
          <Conditional HasTag="eq kitchenfabricator" targetcontainer="true" />
        </StatusEffect>
        <!-- Always check every 0.9 seconds if the timeframe value reached or exceeded 10, then reduce the item's condition by 0.5 and reduce the timeframe value by 10 so it's back to 0, restarting the timer again -->
        <StatusEffect type="Always" target="This" Condition="-0.5" timeframe="-10.0" disabledeltatime="true" interval="0.9">
          <Conditional timeframe="gte 10" />
        </StatusEffect>
      </GreaterComponent>
      <Holdable canbepicked="true" canBeCombined="false" removeOnCombined="true" slots="Any,RightHand,LeftHand" aimpos="28,18" holdangle="30" aimangle="0" aimable="false" swingwhenusing="true" msg="ItemMsgPickUpSelect">
        <!-- When using (eating) the item, reduce the condition by 4 per second -->
        <StatusEffect type="OnUse" target="This" Condition="-4.0"/>
        <!-- When using (eating) the item, apply the afflictions psychosis, nausea, craving for human meat and spill to the character and play an eating sound effect -->
        <StatusEffect type="OnUse" target="Character">
          <Affliction identifier="psychosis" probability="0.001" amount="20" />
          <Affliction identifier="nausea" amount="4" />
          <Affliction identifier="he-hungryforhumanmeat" amount="0.037" />
          <Affliction identifier="worminfection" amount="1" probability="0.02" />
          <Affliction identifier="tapeworminfection" amount="1" probability="0.02" />
          <Affliction identifier="spill" amount="1000" probability="0.0005" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Food/EatingSoft.ogg" loop="True" range="200" volume="5.0" />
        </StatusEffect>
        <!-- When using (eating) the item, reduce the character's hunger by 0.25 per second, if the character's hunger is above 0.25 -->
        <StatusEffect type="OnUse" target="Character">
          <Conditional hunger="gt 0.25" />
          <ReduceAffliction type="hunger" amount="0.25" />
        </StatusEffect>
        <!-- When the item's condition reaches 0 (item breaks), remove the item -->
        <StatusEffect type="OnBroken" target="This">
          <Remove />
        </StatusEffect>
      </Holdable>
      <!-- AiTarget allows the item to be seen and interacted by non-human characters like pets and monsters. SightRange="1000" lets them see the item in a 10m range -->
      <AiTarget sightrange="1000" static="True" />
    </Item>

    <Item name="Meat Patty" identifier="he-meatpatty" category="Misc" subcategory="Ingredients" maxstacksize="8" cargocontaineridentifier="he-coolercrate" description="" Tags="smallitem,meat,ingredient,allowongrill,canspoil,petfood1,petfood2,petfood3" spritecolor="108,108,108,255" inventoryiconcolor="108,108,108,255" containercolor="108,108,108,255" useinhealthinterface="false" scale="0.4" impactsoundtag="impact_soft" isshootable="true" requireaimtouse="true">
      <PreferredContainer primary="refrigerator" secondary="refrigeratedcontainer"/>
      <Sprite texture="%ModDir:2954998725%/Content/Items/Food/FoodAndMeat.png" sourcerect="243,458,35,8" depth="0.6" origin="0.5,0.5" />
      <InventoryIcon texture="%ModDir:2954998725%/Content/Items/Food/FoodAndMeat.png" sourcerect="279,459,31,17" origin="0.5,0.5" />
      <Fabricate suitablefabricators="stove" requiredtime="120" requiresrecipe="false" amount="1">
        <RequiredSkill identifier="cooking" level="20" />
        <RequiredItem identifier="he-rawmeatpatty" amount="1" MinCondition="0.5" MaxCondition="1.0" UseCondition="False" />
        <RequiredItem identifier="he-cookingoil" UseCondition="True" MinCondition="0.05"/>
        <RequiredItem tag="pan" UseCondition="True" MinCondition="0.0"/>
      </Fabricate>
      <Deconstruct time="1" requireddeconstructor="deconstructor" />
      <Body width="31" height="5" density="9" />
      <Price baseprice="29" minavailable="4" maxavailable="16" mincondition="0.9" maxcondition="1.0" usecondition="false" sold="false">
        <Price storeidentifier="merchantoutpost"/>
        <Price storeidentifier="merchantcity"/>
        <Price storeidentifier="merchantresearch"/>
        <Price storeidentifier="merchantmilitary"/>
        <Price storeidentifier="merchantmine"/>
        <Price storeidentifier="merchantmedical"/>
        <Price storeidentifier="merchantbutcher" multiplier="2.0" minavailable="0" maxavailable="32" sold="true" />
      </Price>
      <!-- ItemComponent hosts the effects for grilling the item -->
      <ItemComponent canbeselected="false" canbepicked="false" allowingameediting="false">
        <ActiveConditional HasStatusTag="eq activegrill" targetcontainer="true" />
        <!-- MaxValueLength is used to track the time spent on the grill. It is increased by 1 every second the item is in a container with the "activegrill" status tag -->
        <StatusEffect type="OnActive" target="This" MaxValueLength="1" interval="1" disabledeltatime="true" />
        <!-- Reset the MaxValueLength when the item is no longer contained in a container with the "activegrill" status tag -->
        <StatusEffect type="OnActive" target="This" MaxValueLength="0" setvalue="true" disabledeltatime="true">
          <Conditional HasStatusTag="neq activegrill" targetcontainer="true" />
        </StatusEffect>
        <!-- Check every second if the MaxValueLength reached or exceeded a value of 20, then remove the item and spawn the burned version in its place -->
        <StatusEffect type="OnActive" target="This" interval="1" disabledeltatime="true">
          <Conditional MaxValueLength="gte 20" />
          <Remove />
          <SpawnItem identifier="he-burnedmeatpatty" spawnposition="SameInventory" spawnifcantbecontained="true" SpawnIfInventoryFull="true" />
        </StatusEffect>
      </ItemComponent>
      <!-- MemoryComponent hosts the MaxValueLength attribute which we use to track the time by adjusting its value via StatusEffects each second -->
      <MemoryComponent canbepicked="false" canbeselected="false" allowingameediting="false" drawhudwhenequipped="false" string="" MaxValueLength="0" />
      <Holdable canbepicked="true" canBeCombined="false" removeOnCombined="true" slots="Any,RightHand,LeftHand" aimpos="28,18" holdangle="30" aimangle="0" aimable="false" swingwhenusing="true" msg="ItemMsgPickUpSelect">
        <StatusEffect type="OnUse" target="This" Condition="-4.0"/>
        <StatusEffect type="OnUse" target="Character">
          <Affliction identifier="spill" amount="1000" probability="0.0005" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Food/EatingSoft.ogg" loop="True" range="200" volume="5.0" />
        </StatusEffect>
        <StatusEffect type="OnUse" target="Character">
          <Conditional hunger="gt 0.25" />
          <ReduceAffliction type="hunger" amount="0.25" />
        </StatusEffect>
        <StatusEffect type="OnBroken" target="This">
          <Remove />
        </StatusEffect>
      </Holdable>
      <AiTarget sightrange="1000" static="True" />
    </Item>

    <Item name="Burned Meat Patty" identifier="he-burnedmeatpatty" category="Misc" subcategory="Ingredients" maxstacksize="8" cargocontaineridentifier="he-coolercrate" description="" Tags="smallitem,meat,ingredient,allowongrill,burnedfood" spritecolor="41,41,41,255" inventoryiconcolor="41,41,41,255" containercolor="41,41,41,255" useinhealthinterface="false" scale="0.4" impactsoundtag="impact_soft" isshootable="true" requireaimtouse="true">
      <PreferredContainer primary="refrigerator" secondary="refrigeratedcontainer"/>
      <Sprite texture="%ModDir:2954998725%/Content/Items/Food/FoodAndMeat.png" sourcerect="243,458,35,8" depth="0.6" origin="0.5,0.5" />
      <InventoryIcon texture="%ModDir:2954998725%/Content/Items/Food/FoodAndMeat.png" sourcerect="279,459,31,17" origin="0.5,0.5" />
      <Deconstruct time="1" requireddeconstructor="deconstructor" />
      <Body width="31" height="5" density="9" />
      <Price baseprice="29" minavailable="4" maxavailable="16" mincondition="0.9" maxcondition="1.0" usecondition="false" sold="false">
        <Price storeidentifier="merchantoutpost"/>
        <Price storeidentifier="merchantcity"/>
        <Price storeidentifier="merchantresearch"/>
        <Price storeidentifier="merchantmilitary"/>
        <Price storeidentifier="merchantmine"/>
        <Price storeidentifier="merchantmedical"/>
        <Price storeidentifier="merchantbutcher" multiplier="2.0" minavailable="0" maxavailable="32" sold="true" />
      </Price>
      <!-- ItemComponent hosts the effects for grilling the item -->
      <ItemComponent canbeselected="false" canbepicked="false" allowingameediting="false">
        <ActiveConditional HasStatusTag="eq activegrill" targetcontainer="true" />
        <!-- MaxValueLength is used to track the time spent on the grill. It is increased by 1 every second the item is in a container with the "activegrill" status tag -->
        <StatusEffect type="OnActive" target="This" MaxValueLength="1" interval="1" disabledeltatime="true" />
        <!-- Reset the MaxValueLength when the item is no longer contained in a container with the "activegrill" status tag -->
        <StatusEffect type="OnActive" target="This" MaxValueLength="0" setvalue="true" disabledeltatime="true">
          <Conditional HasStatusTag="neq activegrill" targetcontainer="true" />
        </StatusEffect>
        <!-- Check every second if the MaxValueLength reached or exceeded a value of 12, then remove the item and spawn a fire in its place -->
        <StatusEffect type="OnActive" target="This" interval="1" disabledeltatime="true">
          <Conditional MaxValueLength="gte 12" />
          <Remove />
          <Fire size="1" />
        </StatusEffect>
      </ItemComponent>
      <!-- MemoryComponent hosts the MaxValueLength attribute which we use to track the time by adjusting its value via StatusEffects each second -->
      <MemoryComponent canbepicked="false" canbeselected="false" allowingameediting="false" drawhudwhenequipped="false" string="" MaxValueLength="0" />
      <Holdable canbepicked="true" canBeCombined="false" removeOnCombined="true" slots="Any,RightHand,LeftHand" aimpos="28,18" holdangle="30" aimangle="0" aimable="false" swingwhenusing="true" msg="ItemMsgPickUpSelect">
        <StatusEffect type="OnUse" target="This" Condition="-4.0"/>
        <StatusEffect type="OnUse" target="Character">
          <Affliction identifier="spill" amount="1000" probability="0.0005" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Food/EatingSoft.ogg" loop="True" range="200" volume="5.0" />
        </StatusEffect>
        <StatusEffect type="OnUse" target="Character">
          <Conditional hunger="gt 0.25" />
          <ReduceAffliction type="hunger" amount="0.25" />
        </StatusEffect>
        <StatusEffect type="OnUse" target="Character">
          <Conditional thirst="gt 0" />
          <Affliction identifier="thirst" amount="0.5" />
        </StatusEffect>
        <StatusEffect type="OnBroken" target="This">
          <Remove />
        </StatusEffect>
      </Holdable>
      <AiTarget sightrange="1000" static="True" />
    </Item>

    <!-- Sausage -->
    <Item name="Raw Sausage" identifier="he-rawsausage" category="Misc" subcategory="Ingredients" maxstacksize="8" cargocontaineridentifier="he-coolercrate" description="" Tags="smallitem,meat,ingredient,allowongrill,canspoil,petfood1,petfood2,petfood3" useinhealthinterface="false" scale="0.5" impactsoundtag="impact_soft" isshootable="true" requireaimtouse="true">
      <PreferredContainer secondary="wreckmedcab,abandonedmedcab" spawnprobability="0.02" />
      <PreferredContainer secondary="abandonedcrewcab" minamount="0" maxamount="1" spawnprobability="0.02" />
      <PreferredContainer primary="refrigerator" secondary="refrigeratedcontainer"/>
      <Sprite texture="%ModDir:2954998725%/Content/Items/Food/FoodAndMeat.png" sourcerect="243,444,67,14" depth="0.6" origin="0.5,0.5" />
      <InventoryIcon texture="%ModDir:2954998725%/Content/Items/Food/FoodAndMeat.png" sourcerect="243,444,67,14" origin="0.5,0.5" />
      <ContainedSprite allowedcontainertags="table" texture="%ModDir:2954998725%/Content/Items/Food/FoodAndMeat.png" sourcerect="243,444,67,14" depth="0.525" origin="0.5,0.3"  />
      <Fabricate suitablefabricators="cuttingboard" requiredtime="18" requiresrecipe="false" amount="3">
        <RequiredSkill identifier="butchery" level="20" />
        <RequiredItem tag="rawmeatpiece" amount="1" MinCondition="0.5" MaxCondition="1.0" UseCondition="False" />
        <RequiredItem identifier="he-salt" UseCondition="True" MinCondition="0.025"/>
      </Fabricate>
      <Deconstruct time="1" requireddeconstructor="deconstructor" />
      <Body width="67" radius="7" density="9" />
      <Price baseprice="29" minavailable="4" maxavailable="16" mincondition="0.9" maxcondition="1.0" usecondition="false" sold="false">
        <Price storeidentifier="merchantoutpost"/>
        <Price storeidentifier="merchantcity"/>
        <Price storeidentifier="merchantresearch"/>
        <Price storeidentifier="merchantmilitary"/>
        <Price storeidentifier="merchantmine"/>
        <Price storeidentifier="merchantmedical"/>
        <Price storeidentifier="merchantbutcher" multiplier="2.0" minavailable="0" maxavailable="32" sold="true" />
      </Price>
      <ItemComponent canbeselected="false" canbepicked="false" allowingameediting="false">
        <ActiveConditional HasStatusTag="eq activegrill" targetcontainer="true" />
        <StatusEffect type="OnActive" target="This" MaxValueLength="1" interval="1" disabledeltatime="true" />
        <StatusEffect type="OnActive" target="This" MaxValueLength="0" setvalue="true" disabledeltatime="true">
          <Conditional HasStatusTag="neq activegrill" targetcontainer="true" />
        </StatusEffect>
        <StatusEffect type="OnActive" target="This" interval="1" disabledeltatime="true">
          <Conditional MaxValueLength="gte 45" />
          <Remove />
          <SpawnItem identifier="he-sausage" spawnposition="SameInventory" spawnifcantbecontained="true" SpawnIfInventoryFull="true" />
        </StatusEffect>
      </ItemComponent>
      <MemoryComponent canbepicked="false" canbeselected="false" allowingameediting="false" drawhudwhenequipped="false" string="" MaxValueLength="0" />
      <GreaterComponent canbepicked="false" canbeselected="false" allowingameediting="false" drawhudwhenequipped="false" timeframe="0">
        <StatusEffect type="Always" target="This" timeframe="2" interval="2" disabledeltatime="true" />
        <StatusEffect type="Always" target="This" timeframe="0" interval="2" disabledeltatime="true" setvalue="true">
          <Conditional HasStatusTag="eq activecooling" targetcontainer="true" />
          <Conditional HasTag="eq kitchenfabricator" targetcontainer="true" />
        </StatusEffect>
        <StatusEffect type="Always" target="This" Condition="-0.5" timeframe="-10.0" disabledeltatime="true" interval="0.9">
          <Conditional timeframe="gte 10" />
        </StatusEffect>
      </GreaterComponent>
      <Holdable canbepicked="true" canBeCombined="false" removeOnCombined="true" slots="Any,RightHand,LeftHand" aimpos="28,18" holdangle="30" aimangle="0" aimable="false" swingwhenusing="true" msg="ItemMsgPickUpSelect">
        <StatusEffect type="OnUse" target="This" Condition="-4.0"/>
        <StatusEffect type="OnUse" target="Character">
          <Affliction identifier="psychosis" probability="0.001" amount="20" />
          <Affliction identifier="hallucinating" amount="6" />
          <Affliction identifier="nausea" amount="3" />
          <Affliction identifier="he-hungryforhumanmeat" amount="0.037" />
          <Affliction identifier="worminfection" amount="1" probability="0.02" />
          <Affliction identifier="tapeworminfection" amount="1" probability="0.02" />
          <Affliction identifier="spill" amount="1000" probability="0.0005" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Food/EatingSoft.ogg" loop="True" range="200" volume="5.0" />
        </StatusEffect>
        <StatusEffect type="OnUse" target="Character">
          <Conditional hunger="gt 0.25" />
          <ReduceAffliction type="hunger" amount="0.25" />
        </StatusEffect>
        <StatusEffect type="OnBroken" target="This">
          <Remove />
        </StatusEffect>
      </Holdable>
      <AiTarget sightrange="1000" static="True" />
    </Item>

    <Item name="Sausage" identifier="he-sausage" category="Misc" subcategory="Ingredients" maxstacksize="8" cargocontaineridentifier="he-coolercrate" description="" Tags="smallitem,meat,ingredient,allowongrill,canspoil,petfood1,petfood2,petfood3" spritecolor="108,108,108,255" inventoryiconcolor="108,108,108,255" containercolor="108,108,108,255" useinhealthinterface="false" scale="0.4" impactsoundtag="impact_soft" isshootable="true" requireaimtouse="true">
      <PreferredContainer primary="refrigerator" secondary="refrigeratedcontainer"/>
      <Sprite texture="%ModDir:2954998725%/Content/Items/Food/FoodAndMeat.png" sourcerect="243,444,67,14" depth="0.6" origin="0.5,0.5" />
      <InventoryIcon texture="%ModDir:2954998725%/Content/Items/Food/FoodAndMeat.png" sourcerect="243,444,67,14" origin="0.5,0.5" />
      <ContainedSprite allowedcontainertags="table" texture="%ModDir:2954998725%/Content/Items/Food/FoodAndMeat.png" sourcerect="243,444,67,14" depth="0.525" origin="0.5,0.3"  />
      <Fabricate suitablefabricators="stove" requiredtime="100" requiresrecipe="false" amount="1">
        <RequiredSkill identifier="cooking" level="20" />
        <RequiredItem identifier="he-rawsausage" amount="1" MinCondition="0.5" MaxCondition="1.0" UseCondition="False" />
        <RequiredItem tag="waterpot" UseCondition="True" MinCondition="0.06175"/>
      </Fabricate>
      <Deconstruct time="1" requireddeconstructor="deconstructor" />
      <Body width="67" radius="7" density="9" />
      <Price baseprice="29" minavailable="4" maxavailable="16" mincondition="0.9" maxcondition="1.0" usecondition="false" sold="false">
        <Price storeidentifier="merchantoutpost"/>
        <Price storeidentifier="merchantcity"/>
        <Price storeidentifier="merchantresearch"/>
        <Price storeidentifier="merchantmilitary"/>
        <Price storeidentifier="merchantmine"/>
        <Price storeidentifier="merchantmedical"/>
        <Price storeidentifier="merchantbutcher" multiplier="2.0" minavailable="0" maxavailable="32" sold="true" />
      </Price>
      <ItemComponent canbeselected="false" canbepicked="false" allowingameediting="false">
        <ActiveConditional HasStatusTag="eq activegrill" targetcontainer="true" />
        <StatusEffect type="OnActive" target="This" MaxValueLength="1" interval="1" disabledeltatime="true" />
        <StatusEffect type="OnActive" target="This" MaxValueLength="0" setvalue="true" disabledeltatime="true">
          <Conditional HasStatusTag="neq activegrill" targetcontainer="true" />
        </StatusEffect>
        <StatusEffect type="OnActive" target="This" interval="1" disabledeltatime="true">
          <Conditional MaxValueLength="gte 20" />
          <Remove />
          <SpawnItem identifier="he-burnedsausage" spawnposition="SameInventory" spawnifcantbecontained="true" SpawnIfInventoryFull="true" />
        </StatusEffect>
      </ItemComponent>
      <MemoryComponent canbepicked="false" canbeselected="false" allowingameediting="false" drawhudwhenequipped="false" string="" MaxValueLength="0" />
      <Holdable canbepicked="true" canBeCombined="false" removeOnCombined="true" slots="Any,RightHand,LeftHand" aimpos="28,18" holdangle="30" aimangle="0" aimable="false" swingwhenusing="true" msg="ItemMsgPickUpSelect">
        <StatusEffect type="OnUse" target="This" Condition="-4.0"/>
        <StatusEffect type="OnUse" target="Character">
          <Affliction identifier="spill" amount="1000" probability="0.0005" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Food/EatingSoft.ogg" loop="True" range="200" volume="5.0" />
        </StatusEffect>
        <StatusEffect type="OnUse" target="Character">
          <Conditional hunger="gt 0.25" />
          <ReduceAffliction type="hunger" amount="0.25" />
        </StatusEffect>
        <StatusEffect type="OnBroken" target="This">
          <Remove />
        </StatusEffect>
      </Holdable>
      <AiTarget sightrange="1000" static="True" />
    </Item>

    <Item name="Burned Sausage" identifier="he-burnedsausage" category="Misc" subcategory="Ingredients" maxstacksize="8" cargocontaineridentifier="he-coolercrate" description="" Tags="smallitem,meat,ingredient,allowongrill,burnedfood" spritecolor="41,41,41,255" inventoryiconcolor="41,41,41,255" containercolor="41,41,41,255" useinhealthinterface="false" scale="0.4" impactsoundtag="impact_soft" isshootable="true" requireaimtouse="true">
      <PreferredContainer primary="refrigerator" secondary="refrigeratedcontainer"/>
      <Sprite texture="%ModDir:2954998725%/Content/Items/Food/FoodAndMeat.png" sourcerect="243,444,67,14" depth="0.6" origin="0.5,0.5" />
      <InventoryIcon texture="%ModDir:2954998725%/Content/Items/Food/FoodAndMeat.png" sourcerect="243,444,67,14" origin="0.5,0.5" />
      <ContainedSprite allowedcontainertags="table" texture="%ModDir:2954998725%/Content/Items/Food/FoodAndMeat.png" sourcerect="243,444,67,14" depth="0.525" origin="0.5,0.3"  />
      <Deconstruct time="1" requireddeconstructor="deconstructor" />
      <Body width="67" radius="7" density="9" />
      <ItemComponent canbeselected="false" canbepicked="false" allowingameediting="false">
        <ActiveConditional HasStatusTag="eq activegrill" targetcontainer="true" />
        <StatusEffect type="OnActive" target="This" MaxValueLength="1" interval="1" disabledeltatime="true" />
        <StatusEffect type="OnActive" target="This" MaxValueLength="0" setvalue="true" disabledeltatime="true">
          <Conditional HasStatusTag="neq activegrill" targetcontainer="true" />
        </StatusEffect>
        <StatusEffect type="OnActive" target="This" interval="1" disabledeltatime="true">
          <Conditional MaxValueLength="gte 12" />
          <Remove />
          <Fire size="1" />
        </StatusEffect>
      </ItemComponent>
      <MemoryComponent canbepicked="false" canbeselected="false" allowingameediting="false" drawhudwhenequipped="false" string="" MaxValueLength="0" />
      <Holdable canbepicked="true" canBeCombined="false" removeOnCombined="true" slots="Any,RightHand,LeftHand" aimpos="28,18" holdangle="30" aimangle="0" aimable="false" swingwhenusing="true" msg="ItemMsgPickUpSelect">
        <StatusEffect type="OnUse" target="This" Condition="-4.0"/>
        <StatusEffect type="OnUse" target="Character">
          <Affliction identifier="spill" amount="1000" probability="0.0005" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Food/EatingSoft.ogg" loop="True" range="200" volume="5.0" />
        </StatusEffect>
        <StatusEffect type="OnUse" target="Character">
          <Conditional hunger="gt 0.25" />
          <ReduceAffliction type="hunger" amount="0.25" />
        </StatusEffect>
        <StatusEffect type="OnUse" target="Character">
          <Conditional thirst="gt 0" />
          <Affliction identifier="thirst" amount="0.5" />
        </StatusEffect>
        <StatusEffect type="OnBroken" target="This">
          <Remove />
        </StatusEffect>
      </Holdable>
      <AiTarget sightrange="1000" static="True" />
    </Item>

    <!-- Nuggets -->
    <Item name="Pile of Raw Nuggets" identifier="he-rawnuggets" category="Misc" subcategory="Ingredients" maxstacksize="1" cargocontaineridentifier="he-coolercrate" description="" Tags="smallitem,meat,ingredient,allowinfryer,canspoil,petfood1,petfood2,petfood3" useinhealthinterface="false" scale="0.5" impactsoundtag="impact_soft" isshootable="true" requireaimtouse="true">
      <PreferredContainer secondary="wreckmedcab,abandonedmedcab" spawnprobability="0.0" />
      <PreferredContainer secondary="abandonedcrewcab" minamount="0" maxamount="1" spawnprobability="0.0" />
      <PreferredContainer primary="refrigerator" secondary="refrigeratedcontainer"/>
      <Sprite texture="%ModDir:2954998725%/Content/Items/Food/FoodAndMeat.png" sourcerect="176,437,48,29" depth="0.6" origin="0.5,0.5" />
      <InventoryIcon texture="%ModDir:2954998725%/Content/UI/InventoryIcons.png" sourcerect="109,0,81,54" origin="0.5,0.5" />
      <Deconstruct time="1" requireddeconstructor="deconstructor" />
      <Fabricate suitablefabricators="cuttingboard" requiredtime="22" requiresrecipe="false" amount="1">
        <RequiredSkill identifier="butchery" level="15" />
        <RequiredItem tag="rawmeatpiece" MinCondition="0.5" MaxCondition="1.0" UseCondition="False" />
        <RequiredItem identifier="he-salt" UseCondition="True" MinCondition="0.1"/>
        <RequiredItem identifier="he-pepper" UseCondition="True" MinCondition="0.1"/>
        <RequiredItem identifier="he-flour" UseCondition="True" MinCondition="0.2"/>
      </Fabricate>
      <Body width="34" radius="14" density="11" />
      <!--<Price baseprice="15" minavailable="4" maxavailable="16" mincondition="0.9" maxcondition="1.0" usecondition="false" sold="false">
        <Price storeidentifier="merchantoutpost"/>
        <Price storeidentifier="merchantcity"/>
        <Price storeidentifier="merchantresearch"/>
        <Price storeidentifier="merchantmilitary"/>
        <Price storeidentifier="merchantmine"/>
        <Price storeidentifier="merchantmedical"/>
        <Price storeidentifier="merchantbutcher" multiplier="2.0" minavailable="0" maxavailable="32" sold="true" />
      </Price>-->
      <!-- ItemComponent hosts the effects for frying the item -->
      <ItemComponent canbeselected="false" canbepicked="false" allowingameediting="false">
        <ActiveConditional HasStatusTag="eq activefryer" targetcontainer="true" />
        <!-- MaxValueLength is used to track the time spent in the fryer. It is increased by 1 every second the item is in a container with the "activefryer" status tag -->
        <StatusEffect type="OnActive" target="This" MaxValueLength="1" interval="1" disabledeltatime="true" />
        <!-- Reset the MaxValueLength when the item is no longer contained in a container with the "activefryer" status tag -->
        <StatusEffect type="OnActive" target="This" MaxValueLength="0" setvalue="true" disabledeltatime="true">
          <Conditional HasStatusTag="neq activefryer" targetcontainer="true" />
        </StatusEffect>
        <!-- Check every second if the MaxValueLength reached or exceeded a value of 45, then remove the item and spawn the fried version in its place -->
        <StatusEffect type="OnActive" target="This" interval="1" disabledeltatime="true">
          <Conditional MaxValueLength="gte 45" />
          <Remove />
          <SpawnItem identifier="he-cookednugget" spawnposition="SameInventory" spawnifcantbecontained="true" SpawnIfInventoryFull="true" count="16" />
        </StatusEffect>
      </ItemComponent>
      <!-- MemoryComponent hosts the MaxValueLength attribute which we use to track the time by adjusting its value via StatusEffects each second -->
      <MemoryComponent canbepicked="false" canbeselected="false" allowingameediting="false" drawhudwhenequipped="false" string="" MaxValueLength="0" />
      <!-- GreaterComponent hosts the timeframe attribute which we use for a secondary timer to count the time the item spent outside a refrigerated container -->
      <GreaterComponent canbepicked="false" canbeselected="false" allowingameediting="false" drawhudwhenequipped="false" timeframe="0">
        <!-- Always increase the timeframe value by 2 every 2 seconds -->
        <StatusEffect type="Always" target="This" timeframe="2" interval="2" disabledeltatime="true" />
        <!-- If the item is inside a container that has either the "activecooling" status tag or the "kitchenfabricator" tag, reset the timeframe back to 0 since the item is actively cooled -->
        <StatusEffect type="Always" target="This" timeframe="0" interval="2" disabledeltatime="true" setvalue="true">
          <Conditional HasStatusTag="eq activecooling" targetcontainer="true" />
          <Conditional HasTag="eq kitchenfabricator" targetcontainer="true" />
        </StatusEffect>
        <!-- Always check every 0.9 seconds if the timeframe value reached or exceeded 10, then reduce the item's condition by 0.5 and reduce the timeframe value by 10 so it's back to 0, restarting the timer again -->
        <StatusEffect type="Always" target="This" Condition="-0.5" timeframe="-10.0" disabledeltatime="true" interval="0.9">
          <Conditional timeframe="gte 10" />
        </StatusEffect>
      </GreaterComponent>
      <Holdable canbepicked="true" canBeCombined="false" removeOnCombined="true" slots="Any,RightHand,LeftHand" aimpos="28,18" holdangle="30" aimangle="0" aimable="false" swingwhenusing="true" msg="ItemMsgPickUpSelect">
        <!-- When using (eating) the item, reduce the condition by 4 per second -->
        <StatusEffect type="OnUse" target="This" Condition="-4.0"/>
        <!-- When using (eating) the item, apply the afflictions deliriumine poisoning, nausea, craving for human meat and spill to the character and play an eating sound effect -->
        <StatusEffect type="OnUse" target="Character">
          <Affliction identifier="deliriuminepoisoning" probability="0.001" amount="8" />
          <Affliction identifier="nausea" amount="4" />
          <Affliction identifier="he-hungryforhumanmeat" amount="0.075" />
          <Affliction identifier="worminfection" amount="1" probability="0.02" />
          <Affliction identifier="tapeworminfection" amount="1" probability="0.02" />
          <Affliction identifier="spill" amount="1000" probability="0.0005" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Food/EatingSoft.ogg" loop="True" range="200" volume="5.0" />
        </StatusEffect>
        <!-- When using (eating) the item, reduce the character's hunger by 0.25 per second, if the character's hunger is above 0.25 -->
        <StatusEffect type="OnUse" target="Character">
          <Conditional hunger="gt 0.25" />
          <ReduceAffliction type="hunger" amount="0.25" />
        </StatusEffect>
        <!-- When the item's condition reaches 0 (item breaks), remove the item -->
        <StatusEffect type="OnBroken" target="This">
          <Remove />
        </StatusEffect>
      </Holdable>
      <AiTarget sightrange="1000" static="True" />
    </Item>

    <!-- Offal -->
    <Item name="Raw Offal" identifier="he-rawoffal" category="Misc" subcategory="Ingredients" maxstacksize="8" cargocontaineridentifier="he-coolercrate" description="" Tags="smallitem,meat,ingredient,allowongrill,canspoil,petfood1,petfood2,petfood3" useinhealthinterface="false" scale="0.5" impactsoundtag="impact_soft" isshootable="true" requireaimtouse="true">
      <PreferredContainer secondary="wreckmedcab,abandonedmedcab" spawnprobability="0.02" />
      <PreferredContainer secondary="abandonedcrewcab" minamount="0" maxamount="1" spawnprobability="0.02" />
      <PreferredContainer primary="refrigerator" secondary="refrigeratedcontainer"/>
      <Sprite texture="%ModDir:2954998725%/Content/Items/Food/FoodAndMeat.png" sourcerect="243,458,35,8" depth="0.6" origin="0.5,0.5" />
      <InventoryIcon texture="%ModDir:2954998725%/Content/Items/Food/FoodAndMeat.png" sourcerect="279,459,31,17" origin="0.5,0.5" />
      <Deconstruct time="1" requireddeconstructor="deconstructor" />
      <Body width="31" height="5" density="9" />
      <Price baseprice="10" minavailable="4" maxavailable="16" mincondition="0.9" maxcondition="1.0" usecondition="false" sold="false">
        <Price storeidentifier="merchantoutpost"/>
        <Price storeidentifier="merchantcity"/>
        <Price storeidentifier="merchantresearch"/>
        <Price storeidentifier="merchantmilitary"/>
        <Price storeidentifier="merchantmine"/>
        <Price storeidentifier="merchantmedical"/>
        <Price storeidentifier="merchantbutcher" multiplier="2.0" minavailable="0" maxavailable="32" sold="true" />
      </Price>
      <ItemComponent canbeselected="false" canbepicked="false" allowingameediting="false">
        <ActiveConditional HasStatusTag="eq activegrill" targetcontainer="true" />
        <StatusEffect type="OnActive" target="This" MaxValueLength="1" interval="1" disabledeltatime="true" />
        <StatusEffect type="OnActive" target="This" MaxValueLength="0" setvalue="true" disabledeltatime="true">
          <Conditional HasStatusTag="neq activegrill" targetcontainer="true" />
        </StatusEffect>
        <StatusEffect type="OnActive" target="This" interval="1" disabledeltatime="true">
          <Conditional MaxValueLength="gte 45" />
          <Remove />
          <SpawnItem identifier="he-meatpatty" spawnposition="SameInventory" spawnifcantbecontained="true" SpawnIfInventoryFull="true" />
        </StatusEffect>
      </ItemComponent>
      <MemoryComponent canbepicked="false" canbeselected="false" allowingameediting="false" drawhudwhenequipped="false" string="" MaxValueLength="0" />
      <GreaterComponent canbepicked="false" canbeselected="false" allowingameediting="false" drawhudwhenequipped="false" timeframe="0">
        <StatusEffect type="Always" target="This" timeframe="2" interval="2" disabledeltatime="true" />
        <StatusEffect type="Always" target="This" timeframe="0" interval="2" disabledeltatime="true" setvalue="true">
          <Conditional HasStatusTag="eq activecooling" targetcontainer="true" />
          <Conditional HasTag="eq kitchenfabricator" targetcontainer="true" />
        </StatusEffect>
        <StatusEffect type="Always" target="This" Condition="-0.5" timeframe="-10.0" disabledeltatime="true" interval="0.9">
          <Conditional timeframe="gte 10" />
        </StatusEffect>
      </GreaterComponent>
      <Holdable canbepicked="true" canBeCombined="false" removeOnCombined="true" slots="Any,RightHand,LeftHand" aimpos="28,18" holdangle="30" aimangle="0" aimable="false" swingwhenusing="true" msg="ItemMsgPickUpSelect">
        <StatusEffect type="OnUse" target="This" Condition="-4.0"/>
        <StatusEffect type="OnUse" target="Character">
          <Affliction identifier="psychosis" probability="0.001" amount="20" />
          <Affliction identifier="nausea" amount="4" />
          <Affliction identifier="he-hungryforhumanmeat" amount="0.037" />
          <Affliction identifier="worminfection" amount="1" probability="0.05" />
          <Affliction identifier="tapeworminfection" amount="1" probability="0.05" />
          <Affliction identifier="spill" amount="1000" probability="0.005" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Food/EatingSoft.ogg" loop="True" range="200" volume="5.0" />
        </StatusEffect>
        <StatusEffect type="OnUse" target="Character">
          <Conditional hunger="gt 0.25" />
          <ReduceAffliction type="hunger" amount="0.25" />
        </StatusEffect>
        <StatusEffect type="OnBroken" target="This">
          <Remove />
        </StatusEffect>
      </Holdable>
      <AiTarget sightrange="1000" static="True" />
    </Item>

  </Items>
</Override>